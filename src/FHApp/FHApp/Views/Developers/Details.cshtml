@using FH.App.Extensions
@model FH.App.ViewModels.DeveloperViewModel

@{
    ViewData["Title"] = "Detalhes";
}

<h1>@ViewData["Title"]</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Document)
        </dt>
        <dd class="col-sm-10">
            @this.DocumentFormat(Model.DeveloperType, Model.Document)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Active)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Active)
        </dd>
    </dl>
</div>
<div>
    @*<a class="btn btn-dark" supress-by-claim-name="Developer" supress-by-claim-value="Edit" asp-action="Edit" asp-route-id="@Model.Id">Editar</a>*@
    <a class="btn btn-dark" asp-action="Edit" asp-route-id="@Model.Id">Editar</a>
    <a class="btn btn-info" asp-action="Index">Voltar</a>
</div>


<div id="AddressTarget">
    <partial name="_AddressDetails" />
</div>

<hr />
<h4>Jogos</h4>
<div>
    <partial name="../Games/_GameList" model="@Model.Games" />
</div>

<div id="myModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContent"></div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

        <script>
            $(document).ready(function () {
                SetModal();
            });
        </script>

}